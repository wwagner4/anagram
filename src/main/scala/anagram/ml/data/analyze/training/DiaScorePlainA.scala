package anagram.ml.data.analyze.training

import entelijan.viz.{Viz, VizCreator, VizCreatorGnuplot}

object DiaScorePlainA extends App {

  implicit val creator: VizCreator[Viz.XY] = VizCreatorGnuplot[Viz.XY]()


  def toXY(v: (Int, Double)): Viz.XY = Viz.XY(v._1, v._2)

  val data2 = Seq(
    (0, 1.2924284375),
    (30, 0.3911825390625),
    (60, 0.065943193359375),
    (90, 0.013953857421875),
    (120, 0.0065135491943359375),
    (150, 0.005126145629882813),
    (180, 0.004586060180664062),
    (210, 0.004341531372070312),
    (240, 0.004092947387695313),
    (270, 0.003863282470703125),
    (300, 0.0036767266845703127),
    (330, 0.0034884857177734374),
    (360, 0.0037730648803710938),
    (390, 0.0036229119873046876),
    (420, 0.003475298156738281),
    (450, 0.00334934326171875),
    (480, 0.0032494094848632814),
    (510, 0.003172869567871094),
    (540, 0.0028283438110351562),
    (570, 0.0027669610595703123),
    (600, 0.0027186676025390626),
    (630, 0.0026746661376953126),
    (660, 0.0026319442749023437),
    (690, 0.0025903842163085937),
    (720, 0.002617335205078125),
    (750, 0.0025770639038085936),
    (780, 0.0025394151306152345),
    (810, 0.0025040020751953126),
    (840, 0.002458307189941406),
    (870, 0.002418995513916016),
    (900, 0.002678277893066406),
    (930, 0.002639610595703125),
    (960, 0.0026103729248046874),
    (990, 0.002583216552734375),
    (1020, 0.0025552041625976564),
    (1050, 0.002525396270751953),
    (1080, 0.002284262390136719),
    (1110, 0.0022560313415527344),
    (1140, 0.002232880859375),
    (1170, 0.0022126092529296875),
    (1200, 0.0021919760131835935),
    (1230, 0.0021722303771972654),
    (1260, 0.0020605157470703125),
    (1290, 0.002042313995361328),
    (1320, 0.00202348876953125),
    (1350, 0.002006873779296875),
    (1380, 0.001990728302001953),
    (1410, 0.0019756103515625),
    (1440, 0.001989875840605956),
    (1470, 0.0019329384934522926),
    (1500, 0.001910777407397556),
    (1530, 0.0018938457046337655),
    (1560, 0.0018779394909838403),
    (1590, 0.0018635287277211203),
  ).map(toXY)


  val data3 = Seq(
    (0, 4.387433125),
    (30, 1.43343640625),
    (60, 0.3260715625),
    (90, 0.140654892578125),
    (120, 0.11344970703125),
    (150, 0.11147345703125),
    (180, 0.11022376953125),
    (210, 0.10942947265625),
    (240, 0.108800595703125),
    (270, 0.108221796875),
    (300, 0.141143134765625),
    (330, 0.13991458984375),
    (360, 0.139156630859375),
    (390, 0.13860017578125),
    (420, 0.1381626171875),
    (450, 0.12362537109375),
    (480, 0.12306482421875),
    (510, 0.122603134765625),
    (540, 0.122203359375),
    (570, 0.12183974609375),
    (600, 0.13009041015625),
    (630, 0.129695244140625),
    (660, 0.12937173828125),
    (690, 0.12906517578125),
    (720, 0.1287524609375),
    (750, 0.13613921875),
    (780, 0.135828193359375),
    (810, 0.135545888671875),
    (840, 0.13530435546875),
    (870, 0.135075361328125),
    (900, 0.110560771484375),
    (930, 0.1100630859375),
    (960, 0.109763544921875),
    (990, 0.10957126953125),
    (1020, 0.10942376953125),
    (1050, 0.11567225361174721),
    (1080, 0.11526513669851204),
    (1110, 0.1150183954957102),
    (1140, 0.11481150283525718),
    (1170, 0.11464909320988934),
  ).map(toXY)


  val data4 = Seq(
    (0, 29.9929425),
    (30, 11.24227625),
    (60, 4.1823075),
    (90, 3.0294925),
    (120, 3.177253125),
    (150, 3.144649375),
    (180, 3.138788125),
    (210, 3.1375346875),
    (240, 3.8875490625),
    (270, 3.87614125),
    (300, 3.871875625),
    (330, 3.870774375),
    (360, 3.64856375),
    (390, 3.64690625),
    (420, 3.6459334375),
    (450, 3.6453259375),
    (480, 4.1086528125),
    (510, 4.1049609375),
    (540, 4.103345625),
    (570, 4.102708125),
    (600, 3.8460159375),
    (630, 3.84313375),
    (660, 3.841860625),
    (690, 3.841298125),
    (720, 3.2415345326628917),
    (750, 3.23370420645652),
    (780, 3.2307229384982676),
    (810, 3.2299303325445785),
  ).map(toXY)


  val data5 = Seq(
    (0, 397.43284),
    (30, 137.11207),
    (60, 39.2062575),
    (90, 25.597275),
    (120, 31.884255),
    (150, 31.52756),
    (180, 31.4722575),
    (210, 31.4646425),
    (240, 34.1308725),
    (270, 34.092005),
    (300, 34.07849),
    (330, 34.0731),
    (360, 34.34526),
    (390, 34.3322),
    (420, 34.327645),
    (450, 34.3250975),
    (480, 36.0852525),
    (510, 36.069675),
    (540, 36.064705),
    (570, 36.062625),
    (600, 30.554052840260223),
    (630, 30.475620083918237),
    (660, 30.454008571465234),
    (690, 30.450588967446397),
  ).map(toXY)

  val dataRows = Seq(
    Viz.DataRow(
      name = Some("2"),
      style = Viz.Style_LINES,
      data = data2,
    ),
    Viz.DataRow(
      name = Some("3"),
      style = Viz.Style_LINES,
      data = data3,
    ),
    Viz.DataRow(
      name = Some("4"),
      style = Viz.Style_LINES,
      data = data4,
    ),
    Viz.DataRow(
      name = Some("5"),
      style = Viz.Style_LINES,
      data = data5,
    ),
  )

  {
    val dia = Viz.Diagram[Viz.XY](
      id = "scorePlain03a",
      title = "ScorePlain bs: 100000 lr: 1E-5",
      legendPlacement = Viz.LegendPlacement_RIGHT,
      xRange = Some(Viz.Range(Some(0.0), Some(150))),
      yRange = Some(Viz.Range(Some(0.0), Some(800))),
      dataRows = dataRows
    )
    Viz.createDiagram(dia)
  }

  {
    val dia = Viz.Diagram[Viz.XY](
      id = "scorePlain03a_detail",
      title = "ScorePlain bs: 100000 lr: 1E-5 detail",
      legendPlacement = Viz.LegendPlacement_RIGHT,
      xRange = Some(Viz.Range(Some(0.0), Some(150))),
      yRange = Some(Viz.Range(Some(0.0), Some(6))),
      dataRows = dataRows
    )
    Viz.createDiagram(dia)
  }


}
