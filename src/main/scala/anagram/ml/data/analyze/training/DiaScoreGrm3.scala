package anagram.ml.data.analyze.training

import entelijan.viz.{Viz, VizCreator, VizCreatorGnuplot}

object DiaScoreGrm3 extends App {

  implicit val creator: VizCreator[Viz.XY] = VizCreatorGnuplot[Viz.XY]()

  val dataRow3a =    Viz.DataRow(
    name = Some("3, a"),
    style = Viz.Style_LINES,
    data = Seq(
      (0, 39.121703296703295),
      (20, 36.27176282051282),
      (40, 36.27231456043956),
      (60, 36.2578021978022),
      (80, 36.25336996336996),
      (100, 36.25135302197802),
      (120, 36.24962912087912),
      (140, 36.247989926739926),
      (160, 36.24648122710623),
      (180, 36.24504120879121),
      (200, 36.243727106227105),
      (220, 36.242449633699636),
      (240, 36.24127747252747),
      (260, 36.24013736263736),
      (280, 36.23908424908425),
    ).map(toXY)
  )



  val dataRow3b =    Viz.DataRow(
    name = Some("3, b"),
    style = Viz.Style_LINES,
    data = Seq(
      (0, 36.410048076923076),
      (20, 36.277857142857144),
      (40, 36.261620879120876),
      (60, 36.261043956043956),
      (80, 36.26007326007326),
      (100, 36.25943223443223),
      (120, 36.2587293956044),
      (140, 36.25804487179487),
      (160, 36.25739010989011),
      (180, 36.25671703296703),
      (200, 36.25611721611722),
      (220, 36.255428113553116),
      (240, 36.25486721611722),
      (260, 36.25429029304029),
      (280, 36.25365842490842),
    ).map(toXY)
  )



  val dataRow3c =    Viz.DataRow(
    name = Some("3, c"),
    style = Viz.Style_LINES,
    data = Seq(
      (0, 38.51550366300366),
      (20, 37.33980311355312),
      (40, 36.57052197802198),
      (60, 36.34229166666667),
      (80, 36.289283424908426),
      (100, 36.278076923076924),
      (120, 36.27548076923077),
      (140, 36.27465659340659),
      (160, 36.27407967032967),
      (180, 36.27364010989011),
      (200, 36.273141025641024),
      (220, 36.27274725274725),
      (240, 36.272303113553114),
      (260, 36.271863553113555),
      (280, 36.271410256410256),
    ).map(toXY)
  )



  val dataRow3d =    Viz.DataRow(
    name = Some("3, d"),
    style = Viz.Style_LINES,
    data = Seq(
      (0, 40.347857142857144),
      (20, 38.62126831501831),
      (40, 37.2228663003663),
      (60, 36.62111492673993),
      (80, 36.394423076923076),
      (100, 36.3121978021978),
      (120, 36.282497710622714),
      (140, 36.27162545787546),
      (160, 36.26760531135531),
      (180, 36.2659478021978),
      (200, 36.265064102564104),
      (220, 36.26456043956044),
      (240, 36.264184981684984),
      (260, 36.26378891941392),
      (280, 36.26353021978022),
    ).map(toXY)
  )



  val dataRow3e =    Viz.DataRow(
    name = Some("3, e"),
    style = Viz.Style_LINES,
    data = Seq(
      (0, 36.28805402930403),
      (20, 36.28110805860806),
      (40, 36.27427197802198),
      (60, 36.27004578754579),
      (80, 36.267628205128204),
      (100, 36.266268315018316),
      (120, 36.26544413919414),
      (140, 36.26490155677656),
      (160, 36.26458791208791),
      (180, 36.264233058608056),
      (200, 36.26400641025641),
      (220, 36.26379578754579),
      (240, 36.26366529304029),
      (260, 36.26348214285714),
      (280, 36.2632967032967),
    ).map(toXY)
  )



  val dataRow3f =    Viz.DataRow(
    name = Some("3, f"),
    style = Viz.Style_LINES,
    data = Seq(
      (0, 41.537179487179486),
      (20, 40.64212454212454),
      (40, 39.557188644688644),
      (60, 38.70291208791209),
      (80, 38.06511446886447),
      (100, 37.59312271062271),
      (120, 37.244285714285716),
      (140, 36.98607142857143),
      (160, 36.79513736263736),
      (180, 36.6536858974359),
      (200, 36.5490521978022),
      (220, 36.471497252747255),
      (240, 36.41412545787546),
      (260, 36.371627747252745),
      (280, 36.340123626373625),
    ).map(toXY)
  )




  val dataRows = Seq(
    dataRow3a,
    dataRow3b,
    dataRow3c,
    dataRow3d,
    dataRow3e,
    dataRow3f,
  )

  def toXY(v: (Int, Double)): Viz.XY = Viz.XY(v._1, v._2)

  {
    val dia = Viz.Diagram[Viz.XY](
      id = "scoreGrm3_03",
      title = "Score Grammar",
      legendPlacement = Viz.LegendPlacement_RIGHT,
      //yRange = Some(Viz.Range(Some(0.0), Some(42.0))),
      dataRows = dataRows
    )
    Viz.createDiagram(dia)
  }


}
