package anagram.ml.data.analyze.training

import entelijan.viz.{Viz, VizCreator, VizCreatorGnuplot}

object DiaScore extends App {

  implicit val creator: VizCreator[Viz.XY] = VizCreatorGnuplot[Viz.XY]()

  val data2 = Seq(
    (0, 6.455427734375),
    (4000, 1.6950889892578125),
    (8000, 1.026126220703125),
    (12000, 0.7046431274414062),
    (16000, 0.7413651123046875),
    (20000, 1.06848046875),
    (24000, 0.521722900390625),
    (28000, 1.28769384765625),
    (32000, 0.7530938720703125),
    (36000, 0.919879150390625),
    (40000, 1.0375784912109376),
    (44000, 0.872993408203125),
    (48000, 0.9844052124023438),
    (52000, 1.27965966796875),
    (56000, 1.1427777099609375),
    (60000, 1.2095634765625),
    (64000, 0.6171552734375),
    (68000, 0.8530972900390625),
    (72000, 0.6530347900390625),
    (76000, 0.621641357421875),
    (80000, 1.2295440673828124),
    (84000, 1.17205322265625),
    (88000, 1.156497802734375),
    (92000, 1.094114501953125),
    (96000, 0.8487821044921875),
    (100000, 0.6342610473632813),
    (104000, 1.1980421142578126),
    (108000, 1.6468795166015624),
    (112000, 1.0592786865234376),
    (116000, 1.0567069091796875),
    (120000, 0.8823201904296875),
    (124000, 0.6514085083007812),
    (128000, 1.2150177001953124),
    (132000, 1.349105224609375),
    (136000, 1.2500928955078126),
    (140000, 0.8036337890625),
    (144000, 0.9877489624023438),
    (148000, 0.844589599609375),
    (152000, 0.724877197265625),
    (156000, 0.5516730346679688),
    (160000, 1.1646339111328126),
  ).map(toXY)


  val data3 = Seq(
    (0, 5.08494287109375),
    (4000, 1.632338134765625),
    (8000, 0.660298583984375),
    (12000, 0.6785828247070312),
    (16000, 0.734910888671875),
    (20000, 0.5069990234375),
    (24000, 0.5385086669921875),
    (28000, 0.6966734619140625),
    (32000, 0.6816324462890625),
    (36000, 1.378990234375),
    (40000, 0.8960926513671875),
    (44000, 1.5707509765625),
    (48000, 0.5260081787109375),
    (52000, 1.300300537109375),
    (56000, 0.9624617309570312),
    (60000, 0.7014765014648437),
    (64000, 0.8578680419921875),
    (68000, 0.793731201171875),
    (72000, 0.9206524658203125),
    (76000, 1.10373681640625),
    (80000, 0.6670222778320313),
    (84000, 0.9429638061523438),
    (88000, 0.629526123046875),
    (92000, 0.5442825927734375),
    (96000, 1.66395458984375),
    (100000, 1.748990966796875),
    (104000, 0.9767412109375),
    (108000, 0.7189560546875),
    (112000, 0.6562258911132812),
    (116000, 1.765251708984375),
    (120000, 1.2878477783203126),
    (124000, 0.8702904052734375),
    (128000, 0.55412255859375),
    (132000, 1.0306591796875),
    (136000, 0.7391867065429687),
    (140000, 0.920118408203125),
    (144000, 0.8237198486328124),
  ).map(toXY)


  val data4 = Seq(
    (0, 0.9035813598632813),
    (4000, 1.1869034423828124),
    (8000, 0.61718798828125),
    (12000, 0.888730712890625),
    (16000, 1.1556580810546875),
    (20000, 0.4905673828125),
    (24000, 1.2735723876953124),
    (28000, 0.6313302001953125),
    (32000, 0.9877384033203125),
    (36000, 0.81932177734375),
    (40000, 1.27610546875),
    (44000, 0.6689057006835938),
    (48000, 1.536963623046875),
    (52000, 0.5282589111328125),
    (56000, 0.7901920776367187),
    (60000, 0.6808818359375),
    (64000, 1.0173502807617187),
    (68000, 1.19323583984375),
    (72000, 0.8795361328125),
    (76000, 0.5309494018554688),
    (80000, 0.605525634765625),
    (84000, 1.2110751953125),
    (88000, 1.0881251220703125),
    (92000, 1.3612021484375),
    (96000, 0.95046142578125),
    (100000, 0.7471080322265625),
    (104000, 0.8533182983398437),
    (108000, 1.311676513671875),
    (112000, 0.75196240234375),
    (116000, 0.8487098388671875),
    (120000, 1.02973828125),
    (124000, 0.7253378295898437),
    (128000, 1.075114501953125),
  ).map(toXY)


  val data5 = Seq(
    (0, 0.82991357421875),
    (4000, 0.6982452392578125),
    (8000, 0.8383195190429688),
    (12000, 0.698051513671875),
    (16000, 0.7968021240234375),
    (20000, 0.5637613525390625),
    (24000, 0.8350916748046875),
    (28000, 0.628658447265625),
    (32000, 0.9005250854492187),
    (36000, 1.3892005615234375),
    (40000, 1.275697509765625),
    (44000, 1.4225850830078124),
    (48000, 0.6732156372070313),
    (52000, 0.7333768920898438),
    (56000, 0.575512451171875),
    (60000, 1.3106080322265625),
    (64000, 1.0107472534179687),
    (68000, 0.7327735595703125),
    (72000, 0.91237548828125),
    (76000, 1.959590087890625),
    (80000, 1.38670849609375),
    (84000, 0.7980567626953124),
    (88000, 0.686000244140625),
    (92000, 1.33513525390625),
    (96000, 0.7895567626953125),
    (100000, 0.6970406494140625),
    (104000, 0.81756884765625),
    (108000, 0.9628947143554687),
    (112000, 1.25224755859375),
  ).map(toXY)


  def toXY(v: (Int, Double)): Viz.XY = Viz.XY(v._1, v._2)

  val dataRow1 =    Viz.DataRow(
    name = Some("2"),
    style = Viz.Style_LINES,
    data = Seq(
      (0, 0.82991357421875),
      (4000, 0.6982452392578125),
      (8000, 0.8383195190429688),
      (12000, 0.698051513671875),
    ).map(toXY)
  )
  
  
  val dataRows = Seq(
    Viz.DataRow(
      name = Some("2"),
      style = Viz.Style_LINES,
      data = Seq(
        (0, 0.82991357421875),
        (4000, 0.6982452392578125),
        (8000, 0.8383195190429688),
        (12000, 0.698051513671875),
      ).map(toXY)
    ),
    Viz.DataRow(
      name = Some("3"),
      style = Viz.Style_LINES,
      data = data3,
    ),
    Viz.DataRow(
      name = Some("4"),
      style = Viz.Style_LINES,
      data = data4,
    ),
    Viz.DataRow(
      name = Some("5"),
      style = Viz.Style_LINES,
      data = data5,
    ),
  )


  val dia = Viz.Diagram[Viz.XY](
    id = "scorePlainRan02d",
    title = "ScorePlainRandom bs: 1000 lr: 1E-7 iter:10",
    legendPlacement = Viz.LegendPlacement_RIGHT,
    dataRows = dataRows
  )

  Viz.createDiagram(dia)


}
