package anagram.ml.data.analyze.training

import entelijan.viz.{Viz, VizCreator, VizCreatorGnuplot}

object DiaScorePlainRandomA extends App {

  implicit val creator: VizCreator[Viz.XY] = VizCreatorGnuplot[Viz.XY]()

  val data2 = Seq(
    (0, 568.4488),
    (10, 483.0142),
    (20, 349.29595),
    (30, 264.509125),
    (40, 203.8216625),
    (50, 157.1179875),
    (60, 160.1956875),
    (70, 143.0367),
    (80, 146.551975),
    (90, 155.840725),
    (100, 168.8233125),
    (110, 158.681625),
    (120, 159.784125),
    (130, 139.545875),
    (140, 137.832475),
    (150, 133.265475),
    (160, 155.7031),
    (170, 146.723825),
    (180, 154.047875),
    (190, 143.1265125),
    (200, 131.749),
    (210, 166.61735),
    (220, 163.98985),
    (230, 165.7432375),
    (240, 137.3833625),
    (250, 155.2571625),
    (260, 153.49925),
    (270, 145.696675),
    (280, 144.9332125),
    (290, 141.61775),
    (300, 135.2377125),
    (310, 134.137875),
    (320, 149.178575),
  ).map(toXY)


  val data3 = Seq(
    (0, 597.4679),
    (10, 498.1738),
    (20, 392.02945),
    (30, 274.222),
    (40, 214.571),
    (50, 206.3078375),
    (60, 152.38245),
    (70, 172.022475),
    (80, 166.1471375),
    (90, 198.1407),
    (100, 171.55185),
    (110, 159.474825),
    (120, 141.1856625),
    (130, 141.981675),
    (140, 157.0775),
    (150, 155.80395),
    (160, 157.5737),
    (170, 151.1540625),
    (180, 131.588575),
    (190, 176.8588375),
    (200, 172.16685),
    (210, 146.6091875),
    (220, 136.942725),
    (230, 171.6367375),
    (240, 151.92095),
    (250, 145.63655),
    (260, 147.67255),
    (270, 136.180725),
    (280, 159.406575),
  ).map(toXY)


  val data4 = Seq(
    (0, 559.9057),
    (10, 462.14085),
    (20, 357.40675),
    (30, 280.8076),
    (40, 192.042225),
    (50, 185.828975),
    (60, 182.0281875),
    (70, 165.8303),
    (80, 211.51185),
    (90, 178.7965625),
    (100, 154.5521),
    (110, 150.1003),
    (120, 144.0477),
    (130, 171.0691625),
    (140, 160.202125),
    (150, 144.62085),
    (160, 143.6677875),
    (170, 191.834025),
    (180, 184.593925),
    (190, 157.6089625),
    (200, 151.9216875),
    (210, 177.472825),
    (220, 155.327225),
    (230, 167.276425),
    (240, 145.5489375),
    (250, 160.755575),
  ).map(toXY)


  val data5 = Seq(
    (0, 576.8121),
    (10, 470.1671),
    (20, 368.0114),
    (30, 277.20605),
    (40, 193.7382),
    (50, 173.459575),
    (60, 178.823525),
    (70, 160.7961),
    (80, 197.43825),
    (90, 154.6001625),
    (100, 155.5922),
    (110, 143.939425),
    (120, 178.0186125),
    (130, 173.0901),
    (140, 139.3255),
    (150, 190.719575),
    (160, 191.576625),
    (170, 164.07505),
    (180, 175.3461),
    (190, 170.889075),
    (200, 160.360275),
    (210, 167.1913),
    (220, 157.9368),
    (230, 147.11173499829525),
  ).map(toXY)


  def toXY(v: (Int, Double)): Viz.XY = Viz.XY(v._1, v._2)

  val dataRows = Seq(
    Viz.DataRow(
      name = Some("2"),
      style = Viz.Style_LINES,
      data = data2,
    ),
    Viz.DataRow(
      name = Some("3"),
      style = Viz.Style_LINES,
      data = data3,
    ),
    Viz.DataRow(
      name = Some("4"),
      style = Viz.Style_LINES,
      data = data4,
    ),
    Viz.DataRow(
      name = Some("5"),
      style = Viz.Style_LINES,
      data = data5,
    ),
  )


  val dia = Viz.Diagram[Viz.XY](
    id = "scorePlainRand04",
    title = "ScorePlainRandom bs: 10000 lr: 1E-5",
    legendPlacement = Viz.LegendPlacement_RIGHT,
    yRange = Some(Viz.Range(Some(0.0), Some(800))),
    dataRows = dataRows
  )

  Viz.createDiagram(dia)


}
