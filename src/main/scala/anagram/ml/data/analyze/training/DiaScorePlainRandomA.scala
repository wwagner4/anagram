package anagram.ml.data.analyze.training

import entelijan.viz.{Viz, VizCreator, VizCreatorGnuplot}

object DiaScorePlainRandomA extends App {

  implicit val creator: VizCreator[Viz.XY] = VizCreatorGnuplot[Viz.XY]()

  val data2 = Seq(
    (0, 590.2892),
    (10, 503.73455),
    (20, 366.92235),
    (30, 278.558075),
    (40, 213.65025),
    (50, 163.3493125),
    (60, 164.2139125),
    (70, 145.05635),
    (80, 147.6075375),
    (90, 156.2523625),
    (100, 169.0420125),
    (110, 158.6023125),
    (120, 159.4744125),
    (130, 139.26745),
    (140, 137.62955),
    (150, 133.1207875),
    (160, 155.5096),
    (170, 146.589225),
    (180, 153.9311125),
    (190, 142.7857),
    (200, 131.6143),
    (210, 166.520275),
    (220, 163.824725),
    (230, 165.6369),
    (240, 137.482825),
    (250, 155.2318625),
    (260, 153.5255375),
    (270, 145.600575),
    (280, 144.9246),
    (290, 141.5830125),
    (300, 135.2722875),
    (310, 134.082275),
    (320, 149.267225),
  ).map(toXY)



  val data3 = Seq(
    (0, 576.9034),
    (10, 479.58365),
    (20, 375.39725),
    (30, 262.35465),
    (40, 205.7643875),
    (50, 200.27535),
    (60, 148.7726),
    (70, 169.4673),
    (80, 164.45545),
    (90, 197.0517875),
    (100, 170.5378125),
    (110, 159.0056),
    (120, 141.0888),
    (130, 141.8152125),
    (140, 156.7324125),
    (150, 155.4741125),
    (160, 157.3174),
    (170, 150.3544125),
    (180, 131.691375),
    (190, 176.38395),
    (200, 172.16325),
    (210, 146.8015),
    (220, 136.7057125),
    (230, 171.0987875),
    (240, 151.692825),
    (250, 145.4937),
    (260, 147.324875),
    (270, 135.6570625),
    (280, 158.9922875),
  ).map(toXY)



  val data4 = Seq(
    (0, 548.14775),
    (10, 449.1054),
    (20, 343.5512),
    (30, 268.2277),
    (40, 182.8185875),
    (50, 179.180675),
    (60, 177.132125),
    (70, 162.867225),
    (80, 208.6465),
    (90, 177.165475),
    (100, 153.411675),
    (110, 149.4252375),
    (120, 143.5957),
    (130, 170.603975),
    (140, 159.6471),
    (150, 143.8416625),
    (160, 143.0363),
    (170, 191.400725),
    (180, 183.7967625),
    (190, 157.0989),
    (200, 151.524875),
    (210, 176.974275),
    (220, 155.002475),
    (230, 166.8311375),
    (240, 145.39465),
    (250, 160.3486375),
  ).map(toXY)



  val data5 = Seq(
    (0, 605.5026),
    (10, 489.3614),
    (20, 376.4435),
    (30, 279.02695),
    (40, 192.7895),
    (50, 171.708075),
    (60, 177.1917875),
    (70, 159.5172875),
    (80, 196.1472625),
    (90, 154.1255),
    (100, 155.220775),
    (110, 143.56895),
    (120, 177.6601),
    (130, 172.860075),
    (140, 139.18765),
    (150, 190.4007125),
    (160, 191.4086875),
    (170, 163.56825),
    (180, 175.08515),
    (190, 170.775625),
    (200, 160.310675),
    (210, 166.6048875),
    (220, 157.6838375),
    (230, 146.7647140300034),
  ).map(toXY)


  def toXY(v: (Int, Double)): Viz.XY = Viz.XY(v._1, v._2)

  val dataRows = Seq(
    Viz.DataRow(
      name = Some("2"),
      style = Viz.Style_LINES,
      data = data2,
    ),
    Viz.DataRow(
      name = Some("3"),
      style = Viz.Style_LINES,
      data = data3,
    ),
    Viz.DataRow(
      name = Some("4"),
      style = Viz.Style_LINES,
      data = data4,
    ),
    Viz.DataRow(
      name = Some("5"),
      style = Viz.Style_LINES,
      data = data5,
    ),
  )


  val dia = Viz.Diagram[Viz.XY](
    id = "scorePlainRan03a",
    title = "ScorePlainRandom bs: 10000 lr: 1E-5",
    legendPlacement = Viz.LegendPlacement_RIGHT,
    yRange = Some(Viz.Range(Some(0.0), Some(800))),
    dataRows = dataRows
  )

  Viz.createDiagram(dia)


}
