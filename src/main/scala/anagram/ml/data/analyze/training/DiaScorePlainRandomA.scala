package anagram.ml.data.analyze.training

import entelijan.viz.{Viz, VizCreator, VizCreatorGnuplot}

object DiaScorePlainRandomA extends App {

  implicit val creator: VizCreator[Viz.XY] = VizCreatorGnuplot[Viz.XY]()

  val dataRow2 =    Viz.DataRow(
    name = Some("len:2"),
    style = Viz.Style_LINES,
    data = Seq(
      (0, 578.40765),
      (10, 494.06905),
      (20, 360.024425),
      (30, 273.954375),
      (40, 210.739175),
      (50, 161.6594),
      (60, 163.238),
      (70, 144.737775),
      (80, 147.589175),
      (90, 156.599025),
      (100, 169.280975),
      (110, 158.928225),
      (120, 159.8918),
      (130, 139.4696375),
      (140, 138.1330375),
      (150, 133.534425),
      (160, 155.8964625),
      (170, 146.95605),
      (180, 154.44045),
      (190, 143.390325),
      (200, 131.90945),
      (210, 166.8580375),
      (220, 164.093125),
      (230, 166.0704625),
      (240, 137.703325),
      (250, 155.439675),
      (260, 153.816525),
      (270, 145.815975),
      (280, 145.2647375),
      (290, 142.0112625),
      (300, 135.78995),
      (310, 134.5172375),
      (320, 149.35495),
    ).map(toXY)
  )



  val dataRow3 =    Viz.DataRow(
    name = Some("len:3"),
    style = Viz.Style_LINES,
    data = Seq(
      (0, 630.81465),
      (10, 521.8015),
      (20, 403.7353),
      (30, 278.7249),
      (40, 215.283325),
      (50, 205.7456),
      (60, 151.858575),
      (70, 171.6014875),
      (80, 165.825375),
      (90, 197.892275),
      (100, 171.5181625),
      (110, 159.719075),
      (120, 141.67905),
      (130, 142.5436),
      (140, 157.6115125),
      (150, 156.0173125),
      (160, 157.826925),
      (170, 151.18755),
      (180, 131.941275),
      (190, 177.051425),
      (200, 172.288175),
      (210, 147.106175),
      (220, 137.2933875),
      (230, 171.749475),
      (240, 152.4141),
      (250, 146.273875),
      (260, 147.8236375),
      (270, 136.414875),
      (280, 159.317325),
    ).map(toXY)
  )



  val dataRow4 =    Viz.DataRow(
    name = Some("len:4"),
    style = Viz.Style_LINES,
    data = Seq(
      (0, 601.57405),
      (10, 493.9705),
      (20, 376.4522),
      (30, 290.762775),
      (40, 196.563125),
      (50, 187.946925),
      (60, 182.686975),
      (70, 165.9482375),
      (80, 211.209825),
      (90, 178.5678625),
      (100, 154.318),
      (110, 149.893425),
      (120, 144.054375),
      (130, 171.0826),
      (140, 160.2173125),
      (150, 144.3627),
      (160, 143.57555),
      (170, 191.8432625),
      (180, 184.148275),
      (190, 157.434525),
      (200, 152.0162),
      (210, 177.554925),
      (220, 155.3890125),
      (230, 167.055475),
      (240, 145.65715),
      (250, 160.6465),
    ).map(toXY)
  )



  val dataRow5 =    Viz.DataRow(
    name = Some("len:5"),
    style = Viz.Style_LINES,
    data = Seq(
      (0, 605.6181),
      (10, 491.23745),
      (20, 379.8649),
      (30, 282.971),
      (40, 196.0997),
      (50, 174.10545),
      (60, 179.075575),
      (70, 160.561525),
      (80, 196.695875),
      (90, 154.42525),
      (100, 155.43495),
      (110, 143.8118125),
      (120, 177.65645),
      (130, 173.073575),
      (140, 139.3159),
      (150, 190.5294125),
      (160, 191.411875),
      (170, 163.89085),
      (180, 175.001725),
      (190, 171.008025),
      (200, 160.470475),
      (210, 166.9778),
      (220, 157.999475),
      (230, 147.05264447664507),
    ).map(toXY)
  )


  def toXY(v: (Int, Double)): Viz.XY = Viz.XY(v._1, v._2)



  val dia = Viz.Diagram[Viz.XY](
    id = "scorePlainRand05",
    title = "Score Plain Random",
    legendPlacement = Viz.LegendPlacement_RIGHT,
    //yRange = Some(Viz.Range(Some(0.0), Some(800))),
    dataRows = Seq(
      dataRow2,
      dataRow3,
      dataRow4,
      dataRow5,
    )
  )

  Viz.createDiagram(dia)


}
