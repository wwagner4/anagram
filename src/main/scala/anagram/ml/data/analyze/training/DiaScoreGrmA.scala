package anagram.ml.data.analyze.training

import entelijan.viz.{Viz, VizCreator, VizCreatorGnuplot}

object DiaScoreGrmA extends App {

  implicit val creator: VizCreator[Viz.XY] = VizCreatorGnuplot[Viz.XY]()

  val data2 = Seq(
    (0, 68.00586170848267),
    (100, 67.78298611111111),
    (200, 67.6343432646356),
    (300, 67.54558691756273),
    (400, 67.49243018219833),
    (500, 67.46047080346476),
    (600, 67.44100955794504),
    (700, 67.42900612305854),
    (800, 67.42146430704898),
    (900, 67.41650798984469),
    (1000, 67.41311977299881),
    (1100, 67.41065561529271),
    (1200, 67.4087328255675),
    (1300, 67.40709938769415),
    (1400, 67.40571796594982),
    (1500, 67.40446255227002),
    (1600, 67.40328181003584),
    (1700, 67.40211506869773),
    (1800, 67.40096232825567),
    (1900, 67.3998889262246),
  ).map(toXY)

  val data3 = Seq(
    (0, 56.87475),
    (300, 53.619),
    (600, 52.92853125),
    (900, 52.78513671875),
    (1200, 52.75025),
    (1500, 52.7368203125),
    (1800, 52.72786328125),
    (2100, 38.56966015625),
    (2400, 38.55171875),
    (2700, 38.544828125),
    (3000, 38.5401328125),
    (3300, 38.535890625),
    (3600, 38.5318671875),
    (3900, 38.5279921875),
    (4200, 28.293375),
    (4500, 28.2863046875),
    (4800, 28.2808359375),
    (5100, 28.27577734375),
    (5400, 28.270921875),
    (5700, 28.26624609375),
    (6000, 24.61681640625),
    (6300, 24.60841796875),
    (6600, 24.60428125),
    (6900, 24.601130859375),
    (7200, 24.598224609375),
    (7500, 24.595455078125),
    (7800, 24.59276171875),
    (8100, 23.96778515625),
    (8400, 23.965248046875),
    (8700, 23.9628828125),
    (9000, 23.96052734375),
    (9300, 23.958181640625),
    (9600, 23.95583203125),
    (9900, 23.95351953125),
    (10200, 43.4899609375),
    (10500, 43.4767109375),
    (10800, 43.47179296875),
    (11100, 43.46862109375),
    (11400, 43.4659296875),
    (11700, 43.463453125),
    (12000, 43.257642045454546),
    (12300, 43.25272727272727),
    (12600, 43.248375946969695),
    (12900, 43.244375),
    (13200, 43.240544507575756),
    (13500, 43.236936553030304),
    (13800, 43.23340909090909),
  ).map(toXY)


  def toXY(v: (Int, Double)): Viz.XY = Viz.XY(v._1, v._2)


  val dataRows = Seq(
    Viz.DataRow(
      name = Some("2"),
      style = Viz.Style_LINES,
      data = data2,
    ),
    Viz.DataRow(
      name = Some("3"),
      style = Viz.Style_LINES,
      data = data3,
    ),
  )

  {
    val dia = Viz.Diagram[Viz.XY](
      id = "scoreGrm13",
      title = "Score Grammar",
      legendPlacement = Viz.LegendPlacement_RIGHT,
      //yRange = Some(Viz.Range(Some(0.0), Some(2.0))),
      dataRows = dataRows
    )
    Viz.createDiagram(dia)
  }


}
