package anagram.ml.data.analyze.training

import entelijan.viz.{Viz, VizCreator, VizCreatorGnuplot}

object DiaScoreGrmA extends App {

  implicit val creator: VizCreator[Viz.XY] = VizCreatorGnuplot[Viz.XY]()

  val data2 = Seq(
    (0, 68.00586170848267),
    (100, 67.78298611111111),
    (200, 67.6343432646356),
    (300, 67.54558691756273),
    (400, 67.49243018219833),
    (500, 67.46047080346476),
    (600, 67.44100955794504),
    (700, 67.42900612305854),
    (800, 67.42146430704898),
    (900, 67.41650798984469),
    (1000, 67.41311977299881),
    (1100, 67.41065561529271),
    (1200, 67.4087328255675),
    (1300, 67.40709938769415),
    (1400, 67.40571796594982),
    (1500, 67.40446255227002),
    (1600, 67.40328181003584),
    (1700, 67.40211506869773),
    (1800, 67.40096232825567),
    (1900, 67.3998889262246),
  ).map(toXY)

  val data3 = Seq(
    (0, 48.39634615384615),
    (20, 47.53654761904762),
    (40, 46.35868131868132),
    (60, 45.259661172161174),
    (80, 44.27524267399267),
    (100, 43.3979945054945),
    (120, 42.61681318681319),
    (140, 41.92104395604395),
    (160, 41.301456043956044),
    (180, 40.749661172161176),
    (200, 40.2581684981685),
    (220, 39.820279304029306),
    (240, 39.43035256410256),
    (260, 39.082884615384614),
    (280, 38.77343406593407),
    (300, 38.49772435897436),
    (320, 38.252012362637366),
    (340, 38.033095238095235),
    (360, 37.83786858974359),
    (380, 37.66429945054945),
    (400, 37.509729853479854),
    (420, 37.371964285714284),
    (440, 37.24921474358975),
    (460, 37.13983516483516),
    (480, 37.042410714285715),
    (500, 36.95553113553114),
    (520, 36.8782326007326),
    (540, 36.8092239010989),
    (560, 36.74788461538461),
    (580, 36.69307692307692),
    (600, 36.644361263736265),
    (620, 36.60085164835165),
    (640, 36.56218406593407),
    (660, 36.52769688644689),
    (680, 36.49704441391941),
    (700, 36.469702380952384),
    (720, 36.44526098901099),
    (740, 36.4235119047619),
    (760, 36.4041804029304),
    (780, 36.38688644688645),
    (800, 36.37152243589743),
    (820, 36.35787545787546),
    (840, 36.34559065934066),
    (860, 36.33474358974359),
    (880, 36.325082417582415),
    (900, 36.316407967032966),
    (920, 36.30875457875458),
    (940, 36.301881868131865),
    (960, 36.295778388278386),
    (980, 36.29034340659341),
  ).map(toXY)


  def toXY(v: (Int, Double)): Viz.XY = Viz.XY(v._1, v._2)


  val dataRows = Seq(
    Viz.DataRow(
      name = Some("2"),
      style = Viz.Style_LINES,
      data = data2,
    ),
    Viz.DataRow(
      name = Some("3"),
      style = Viz.Style_LINES,
      data = data3,
    ),
  )

  {
    val dia = Viz.Diagram[Viz.XY](
      id = "scoreGrm14",
      title = "Score Grammar",
      legendPlacement = Viz.LegendPlacement_RIGHT,
      //yRange = Some(Viz.Range(Some(0.0), Some(42.0))),
      dataRows = dataRows
    )
    Viz.createDiagram(dia)
  }


}
